from classifier import classifier

if __name__ == '__main__':
    if not classifier.load_model():
        classifier.train()
        classifier.show_train_stats()
        classifier.save_model()

    test_labels = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0]
    test_phrases = [
        'жена мне говорит, что сфотается с чьим-нибудь дипломом, покажет маме фото, а диплом в следующем году будет стадионный гул от этих беспроводных девайсов',
        'такие же юзеры, но попроще, без мозгов абсолютно уверен в урегулировании споров с Россией по нефти и газа. вот и в штатах нет демократии.',
        'И вообще, ты человек, как ты думаешь, что сухое дерево само уйдет?',
        'Из разговора в офисе теперь туалет постоянно свободен!. Это я еще не значит, что о своем одиночестве.',
        'Джелпиздец я выходные провел JS-Raven каак? ДжелКажется, у меня из себя. а я скелил модель вертолета.',
        'ну ладно, пусть хоть половину оплачивает!.',
        'наша деревня вымирает. тут настолько мало молодёжи что в армии от безделья начал читать Набокова и Толстого.',
        'вот какая история. Взял домой новую процедуру критикал инцидентов почитать, оставил вчера на меня навевает устанавливающийся за спиной ms visual studio .net.',
        'Подъезд не мой вассал.',
        'Cлучайно через мозиллу удалил фотки с интересным предложением',
        'mantihorkaа я щас полчаса искал кружку по комнате. оказалось я ее еще не знал,что это только уровень в сапере!!.',
        'jomiko научи, а? я админский пароль знаю. Что там внутри? ЛарисаСырое мясо и кровь. противно',
        'Парадоксы жизни. . В каморкинге.',
        'ugenka насрал всей производственной лаборатории в душуbibigon это как домашнее животное. Его любит весь офис, подкармливает его, играет с ним, мол, коллектив приготовил шикарный подарок для меня, частной собственностью, и могу с тобой даты рождения одинаковые, только цифры другие.'
    ]

    predictions = classifier.check_phrases(test_phrases)
    print('\n Predictions:')
    prediction_errors = 0
    for i, p in enumerate(predictions):
        if p != test_labels[i]:
            print(f'Error in {test_phrases[i]} real: {test_labels[i]} predicted: {p}')
            prediction_errors += 1
    print(f'Prediction errors: {prediction_errors}')